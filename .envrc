export dict=dict.txt
#source_env_if_exists ${OLDPWD%/*}/.envrc  # should load the cluster .envrc when cd'ing to typically a symlink dir
#source_up_if_exists                       # loads a parent dir, cluster .envrc

# Define Functions
recd() { local pwd=$(echo ${1:-$PWD}|sed "s|^$HOME|~|;s/OneDrive - Sky Betting and Gaming/OD/;s|Library/CloudStorage/OneDrive-SkyBettingandGaming|OD|;s|Library/CloudStorage/OneDrive-FlutterUK&I|OD|");echo $pwd; }
ascii2port() { echo $[$(echo -e "${1?}\c" | hexdump -e '16/1 "%02x " "\n"' | tr '[a-f]' '[0-5]' | sed 's/ *$//g;s/ /+/g')+11111]; }

# Define Variables
if [ "$TERM_PROGRAM" = "vscode" ]; then export SHLVL_OFFSET=1;fi
export repo_root=$(git rev-parse --show-toplevel 2>/dev/null || pwd)
cat=$(which bat)
export port=$(ascii2port ${PWD##*/})

# Once a day
daily_file="${repo_root}/.envrc"
daily=$($date -r "$daily_file" +%Y%m%d 2>/dev/null)
if [ "$daily" != $($date +%Y%m%d) ]; then
 #echo DAILY
 #kubectl get nodes
 test -e "$daily_file" && test -s "$daily_file" && touch "$daily_file"

# auto-motd ($OLDPWD is the dir you were in when the .envrc file was loaded)
for f in $OLDPWD/.motd .motd motd motd.md README.md; do
 test -f $f && ${cat:-cat} ${cat:+-l md} $f && break
done

fi

# subdir motd ($OLDPWD is the dir you were in when the .envrc file was loaded)
test -e /tmp/no-motd || \
for f in $OLDPWD/.motd $OLDPWD/motd.md; do
 test -f $f && ${cat:-cat} ${cat:+-l md} $f && break
done

# inline motd
test -e /tmp/shush || \
cat<<\EOM | ${cat:-cat} ${cat:+-l md}

## Notes

```bash
 command ispell ${dict:+-p $dict} README.md
```

EOM

# Rewrite the OneDrive path to a shorter version using the symlink
export repo_root=$(recd $repo_root)

# test -f ${DIRENV_FILE%/*}/.daily && rm ${DIRENV_FILE%/*}/.daily || touch -r ${r:=/etc/ntp.conf} ${DIRENV_FILE?}
# vim:backup
